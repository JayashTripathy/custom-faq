generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgsodium(schema: "pgsodium"), supabase_vault, uuid_ossp(map: "uuid-ossp", schema: "extensions"), vector]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Faq           Faq[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Faq {
  id           String    @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  title        String    @unique
  description  String?
  logo         String?
  backdrop     String?
  organization String?
  address      String?
  aiMode       Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  userId       String?
  theme        String?
  User         User?     @relation(fields: [userId], references: [id])
  faqs         FaqItem[]
  socials      Social[]

  @@unique([title, userId])
}

model FaqItem {
  id       Int     @id @default(autoincrement())
  question String
  answer   String
  faqId    String? @db.Uuid
  faq      Faq?    @relation(fields: [faqId], references: [id])

  @@unique([question, answer, faqId])
}

model Social {
  id    String  @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  name  String
  url   String
  faqId String? @db.Uuid
  faq   Faq?    @relation(fields: [faqId], references: [id])
}

model documents {
  id        BigInt                 @id @default(autoincrement())
  content   String?
  metadata  Json?
  embedding Unsupported("vector")?
}

